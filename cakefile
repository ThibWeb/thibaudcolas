fs     = require 'fs'
{exec} = require 'child_process'
util   = require 'util'

# Folders of interest.
coffeeFolder     = 'coffee'
libFolder 			 = 'lib'
jsFolder         = 'js'

# File names during build process.
targetFile       = 'script'
coffeeTargetFile = "#{coffeeFolder}/#{targetFile}.coffee"
jsTargetFile     = "#{jsFolder}/#{targetFile}.js"
jsFinalFile      = "#{jsFolder}/#{targetFile}.min.js"

# CoffeeScript files to compile.
coffeeFiles  		 = [
										'plugins',
										'twitter',
										'main'
									]

# Libraries to concatenate.
libFiles				 = [
										'fittext',
										'pretty',
										'bootstrap',
										'meny'
									]


task 'build', 'Builds a single JavaScript file from CoffeeScript files', ->
	appContents = new Array remaining = coffeeFiles.length

	for file, i in coffeeFiles then do (file, i) ->
		fs.readFile "#{coffeeFolder}/#{file}.coffee", 'utf8', (err, fileContents) ->
			util.log err if err
			appContents[i] = fileContents
			util.log "[#{i + 1}] #{file}.coffee"
			process() if --remaining is 0
	# Ran only after all files have been read.
	process = ->
		fs.writeFile coffeeTargetFile, appContents.join('\n\n'), 'utf8', (err) ->
			util.log err if err
			exec "coffee --bare --lint --output #{jsFolder} --compile #{coffeeTargetFile}", (err, stdout, stderr) ->
				util.log err if err
				util.log "> #{jsTargetFile}"
				fs.unlink coffeeTargetFile, (err) -> util.log err if err



task 'watch', 'Watch CoffeeScript source files and build changes', ->
	for file in coffeeFiles then do (file) ->
		fs.watchFile "#{coffeeFolder}/#{file}.coffee", (curr, prev) ->
			if +curr.mtime isnt +prev.mtime
				invoke 'build'



task 'compress', 'Minify the resulting application file after build', ->
  # jsLibs = libFiles.reduce ((acc = '', file) -> acc + "--js #{jsFolder}/#{libFolder}/#{file}.js "), ''
  # --compilation_level ADVANCED_OPTIMIZATIONS
  # #{jsLibs}
  exec "java -jar /Applications/Utilities/Scripts/compiler.jar --js #{jsTargetFile} --js_output_file #{jsFinalFile}", (err, stdout, stderr) ->
    util.log err if err
  	util.log "> #{jsFinalFile}"



task 'compile:lib', 'Compiles all CoffeeScript libraries', ->
	exec "coffee --bare --lint --output #{jsFolder}/#{libFolder}/ --compile #{coffeeFolder}/#{libFolder}/*.coffee"
