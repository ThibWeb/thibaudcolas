// Generated by CoffeeScript 1.4.0
/*
# Console-lacking browsers.
*/

var TwitterAPI;

if (!(window.console && console.log)) {
  (function() {
    var console, method, methods, noop, _i, _len;
    noop = function() {};
    methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'markTimeline', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'];
    console = window.console = {};
    for (_i = 0, _len = methods.length; _i < _len; _i++) {
      method = methods[_i];
      console[method] = noop;
    }
  })();
}

/*
# Twitter API calls inspired by Chirp.js.
*/


TwitterAPI = function() {
  var apiURL, containerID;
  apiURL = 'http://api.twitter.com/1/statuses/user_timeline.json?include_entities=true&count=7&include_rts=true&exclude_replies=true&screen_name=ThibWeb';
  containerID = 'tweet-container';
  this.textToHTML = function(text, entities) {
    var e, elt, hashtags_fun, htmlOutput, i, indices, key, linkProcessing, linkWrap, media_fun, urls_fun, user_mentions_fun, _i, _j, _ref, _ref1;
    linkWrap = function(url, display) {
      return "<a href=\"" + url + "\">" + display + "</a>";
    };
    urls_fun = function(elt) {
      return linkWrap(elt.expanded_url, elt.display_url);
    };
    hashtags_fun = function(elt) {
      return linkWrap('http://twitter.com/search/%23' + elt.text, elt.text);
    };
    user_mentions_fun = function(elt) {
      return linkWrap('http://twitter.com/' + elt.screen_name, '@' + elt.screen_name);
    };
    media_fun = function(elt) {
      return linkWrap(elt.expanded_url, elt.display_url);
    };
    linkProcessing = {
      urls: urls_fun,
      hashtags: hashtags_fun,
      user_mentions: user_mentions_fun,
      media: media_fun
    };
    indices = [];
    for (key in entities) {
      elt = entities[key];
      if (elt.length > 0) {
        for (i = _i = 0, _ref = elt.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          if (!(elt[i] != null)) {
            continue;
          }
          e = elt[i];
          indices[e.indices[0]] = {
            start: e.indices[0],
            end: e.indices[1],
            link: linkProcessing[key](e)
          };
        }
      }
    }
    htmlOutput = text;
    for (i = _j = _ref1 = indices.length - 1; _ref1 <= 0 ? _j < 0 : _j > 0; i = _ref1 <= 0 ? ++_j : --_j) {
      if (!(indices[i] != null)) {
        continue;
      }
      elt = indices[i];
      htmlOutput = (htmlOutput.substr(0, elt.start)) + elt.link + (htmlOutput.substr(elt.end, htmlOutput.length - 1));
    }
    return htmlOutput;
  };
  this.jsonToHTML = function(json) {
    var htmlOutput, tweet, _i, _len;
    htmlOutput = '';
    for (_i = 0, _len = json.length; _i < _len; _i++) {
      tweet = json[_i];
      htmlOutput += "<p class=\"tweet\">\n  " + (textToHTML(tweet.text, tweet.entities)) + "\n  <a href=\"http://thib.me/" + tweet.id_str + "\" class=\"tweet-link pull-right\">\n    <time>" + (prettyDate(tweet.created_at)) + "</time>\n  </a>\n</p>";
    }
    return "<div class=\"tweets\">" + htmlOutput + "</div>";
  };
  this.retrieveTweets = function() {
    var callKey, get, _ref;
    TwitterAPI.requests = ((_ref = TwitterAPI.requests) != null ? _ref : 0) + 1;
    callKey = 'callback' + TwitterAPI.requests;
    TwitterAPI[callKey] = function(json) {
      var _ref1;
      json = (_ref1 = json.results) != null ? _ref1 : json;
      return (document.getElementById(containerID)).innerHTML = jsonToHTML(json);
    };
    get = document.createElement('script');
    get.src = apiURL + '&callback=TwitterAPI.' + callKey;
    $('head').append(get);
    return console.log('Retrieving Tweets ...');
  };
  if (this.constructor !== TwitterAPI) {
    return new TwitterAPI().retrieveTweets();
  }
};

$(function() {
  var $contact, $content, $counter, $mail, $message, api, charCount, correctMail, decode, mailCheck, meny, spam_txt, token_txt;
  $content = $('#content');
  /*
  	# Initializing
  */

  $('h1').fitText(0.7);
  meny = Meny.create();
  api = TwitterAPI();
  $('abbr').tooltip();
  $('#thibaudcolas').tooltip();
  /*
  	# Contact form manager.
  */

  $contact = $('#contact-js');
  $mail = $('#mail');
  $message = $('#message');
  $counter = $('.char-counter');
  mailCheck = /@/;
  charCount = function() {
    var count;
    count = $message.val().length;
    $counter.html(count);
    return $counter.css({
      'color': "hsl(210, " + (count / 3) + "%, 50%",
      'text-shadow': "0 0 1 px hsl(210, " + (count / 3) + "%, 70%)"
    });
  };
  $message.on('keyup', charCount);
  $message.change(charCount);
  $contact.on('submit', function() {
    var address, input;
    address = $mail.val();
    input = $message.val();
    return address !== '' && input !== '' && mailCheck.test(address);
  });
  /*
  	# Scrolling with anchor links.
  */

  $('ul.nav a, a.to-top').on('click', function(e) {
    var destination;
    e.preventDefault();
    destination = $($(this).attr('href')).offset().top;
    return $content.stop().animate({
      scrollTop: destination
    }, 500);
  });
  /*
  	# Information hiding for spam bots.
  */

  decode = function(arr) {
    return arr.reduce((function(acc, car, i) {
      if (acc == null) {
        acc = '';
      }
      return acc + String.fromCharCode(car - i);
    }), '');
  };
  spam_txt = [116, 105, 107, 101, 68, 121, 110, 112, 106, 55, 119, 112];
  correctMail = decode(spam_txt);
  $('a.remplacement').attr('href', "mailto:" + correctMail);
  $('span.remplacement').html(correctMail);
  token_txt = [54, 103, 54, 101, 60, 58, 54, 64, 106, 57, 110, 66, 69, 114, 64, 70, 118, 117, 68, 117, 75, 122, 71, 75, 123, 76, 74, 126, 128, 86, 79, 82];
  $contact.attr('action', "http://getsimpleform.com/messages?form_api_token=" + decode(token_txt));
  return console.log('Ready For Action !');
});
